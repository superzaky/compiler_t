Pointers en memory address voorbeeld:

int myAge = 43;     // An int variable
int* ptr = &myAge;  // A pointer variable, with the name ptr, that stores the address of myAge

// Output the value of myAge (43)
printf("%d\n", myAge);

// Output the memory address of myAge (0x7ffe5367e044)
printf("%p\n", &myAge);

// Output the memory address of myAge with the pointer (0x7ffe5367e044)
printf("%p\n", ptr);

****************************************************************

// Create a structure called myStructure
struct myStructure {
  int myNum;
  char myLetter;
};

int main() {
  // Create a structure variable of myStructure called s1
  struct myStructure s1;

  // Assign values to members of s1
  s1.myNum = 13;
  s1.myLetter = 'B';

  // Print values
  printf("My number: %d\n", s1.myNum);
  printf("My letter: %c\n", s1.myLetter);

  return 0;
}

*****************************************************************

It's a better habit to do int *myVariable; instead of int* myVariable;

For example, int *myVariable, myVariable2;

It seems obvious that myVariable has type int*, while myVariable2 has type int.

In:

int* myVariable, myVariable2;


it may seem implied that both are of type int*, but that is not correct as myVariable2 has type int.

Therefore, the first programming style is more intuitive.

******************************************************************



